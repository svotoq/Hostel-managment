[{"D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\index.js":"1","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\reportWebVitals.js":"2","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\containers\\App.js":"3","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\routes.js":"4","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\pages\\TilesPage.js":"5","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\pages\\CreateRoomPage.js":"6","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\pages\\AuthPage.js":"7","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\pages\\RoomsPage.js":"8","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\pages\\StudentPage.js":"9","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\pages\\RoomPage.js":"10","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\pages\\StudentsPage.js":"11","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\hooks\\message.js":"12","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\hooks\\http.js":"13","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\context\\AuthContext.js":"14","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\hooks\\auth.js":"15","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\components\\Header.js":"16","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\pages\\CreateStudentPage.js":"17","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\components\\Rooms\\SearchRooms.js":"18","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\components\\Rooms\\RoomsTable.js":"19","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\components\\Students\\SearchStudents.js":"20","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\components\\Students\\StudentsTable.js":"21","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\pages\\ChooseRoom.js":"22","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\components\\Rooms\\StudentsInfo.js":"23"},{"size":469,"mtime":1607441188718,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":725,"mtime":1607609295391,"results":"27","hashOfConfig":"25"},{"size":1804,"mtime":1607757536519,"results":"28","hashOfConfig":"25"},{"size":915,"mtime":1607628249659,"results":"29","hashOfConfig":"25"},{"size":4423,"mtime":1607729402313,"results":"30","hashOfConfig":"25"},{"size":3393,"mtime":1607631073440,"results":"31","hashOfConfig":"25"},{"size":240,"mtime":1607634926783,"results":"32","hashOfConfig":"25"},{"size":13303,"mtime":1607774316519,"results":"33","hashOfConfig":"25"},{"size":9953,"mtime":1607778396011,"results":"34","hashOfConfig":"25"},{"size":227,"mtime":1607710484991,"results":"35","hashOfConfig":"25"},{"size":204,"mtime":1607606802182,"results":"36","hashOfConfig":"25"},{"size":1032,"mtime":1607607934833,"results":"37","hashOfConfig":"25"},{"size":212,"mtime":1607607926611,"results":"38","hashOfConfig":"25"},{"size":857,"mtime":1607608055973,"results":"39","hashOfConfig":"25"},{"size":1190,"mtime":1607686452746,"results":"40","hashOfConfig":"25"},{"size":7367,"mtime":1607774845547,"results":"41","hashOfConfig":"25"},{"size":5956,"mtime":1607776492761,"results":"42","hashOfConfig":"25"},{"size":3311,"mtime":1607777526024,"results":"43","hashOfConfig":"25"},{"size":7340,"mtime":1607757613670,"results":"44","hashOfConfig":"25"},{"size":3407,"mtime":1607777641160,"results":"45","hashOfConfig":"25"},{"size":2213,"mtime":1607774771909,"results":"46","hashOfConfig":"25"},{"size":2252,"mtime":1607772442290,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"q7rtc",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\index.js",[],["103","104"],"D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\reportWebVitals.js",[],"D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\containers\\App.js",[],"D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\routes.js",[],"D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\pages\\TilesPage.js",[],"D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\pages\\CreateRoomPage.js",["105","106","107"],"import React, { useEffect, useState } from 'react'\r\nimport { useHttp } from '../hooks/http';\r\nimport { useMessage } from '../hooks/message';\r\nimport '../style/createRooms.css'\r\nimport 'materialize-css'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const CreateRoomPage = () => {\r\n    const history = useHistory()\r\n    const { loading, error, request, clearError } = useHttp();\r\n    const message = useMessage()\r\n\r\n    const emptyForm = {\r\n        roomNumber: \"\", roomSize: \"\"\r\n    }\r\n    const emptyChkbks = {\r\n        storeRoom: false\r\n    }\r\n    const [form, setForm] = useState(emptyForm)\r\n    const [checkbs, setCheckbs] = useState(emptyChkbks)\r\n\r\n    const checkbsChangeHandler = event => {\r\n        setCheckbs({ ...checkbs, [event.target.name]: event.target.checked })\r\n    }\r\n    const changeHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value })\r\n    }\r\n    const saveHandler = async () => {\r\n        try {\r\n            const saveParams = { ...form, ...checkbs }\r\n            const data = await request('/api/rooms/', 'POST', { ...saveParams })\r\n            message(data.message)\r\n            history.goBack()\r\n        } catch (e) {\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        message(error)\r\n        clearError()\r\n    }, [error, message, clearError])\r\n\r\n    useEffect(() => {\r\n        var el = document.querySelector(\".tabs\")\r\n        var instance = window.M.Tabs.init(el, {});\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col s12 tab-col\">\r\n                    <ul className=\"tabs tabs-style\">\r\n                        <li className=\"tab col s3 \"><a className=\"active\" href=\"#test1\">Информация о комнате</a></li>\r\n                        <li className=\"tab col s3 \"><a href=\"#test2\">Инвентарь</a></li>\r\n                        <li className=\"indicator indicator-default\"></li>\r\n                    </ul>\r\n                </div>\r\n                <div id=\"test1\" className=\"col s12 tab-col\">\r\n                    <div className=\"tab-container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"search-input-field col s4\">\r\n                                <label htmlFor=\"roomNumber\">Номер комнаты</label>\r\n                                <input id=\"roomNumber\"\r\n                                    type=\"roomNumber\"\r\n                                    name=\"roomNumber\"\r\n                                    onChange={changeHandler}\r\n                                    value={form.roomNumber}\r\n                                    className=\"validate\" />\r\n                            </div>\r\n                            <div className=\"search-input-field col s4\">\r\n                                <label htmlFor=\"roomSize\">Размер комнаты</label>\r\n                                <input id=\"roomSize\"\r\n                                    type=\"roomSize\"\r\n                                    name=\"roomSize\"\r\n                                    value={form.roomSize}\r\n                                    onChange={changeHandler}\r\n                                    className=\"validate\" />\r\n                            </div>\r\n                            <div className=\"checkbox-containter col s4\">\r\n                                <label>\r\n                                    <input type=\"checkbox\"\r\n                                        name=\"storeRoom\"\r\n                                        id=\"storeRoom\"\r\n                                        onChange={checkbsChangeHandler}\r\n                                    />\r\n                                    <span>Склад</span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"test2\" className=\"col s12 tab-col\">\r\n                    <div className=\"tab-container\">\r\n                        <div>Inentory</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"footer-save\">\r\n                <div className=\"footer-create-button\">\r\n                    <a className=\"waves-effect waves-light btn save-red-button\"\r\n                        onClick={saveHandler}>Сохранить</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\pages\\AuthPage.js",[],"D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\pages\\RoomsPage.js",[],"D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\pages\\StudentPage.js",["108","109","110","111","112","113","114","115","116","117","118","119","120","121","122"],"import React, { useCallback, useEffect, useState } from 'react'\r\nimport { useHttp } from '../hooks/http';\r\nimport '../style/roomPage.css'\r\nimport { Link, useHistory, useParams } from 'react-router-dom'\r\nimport { check } from 'express-validator';\r\nimport { useMessage } from '../hooks/message';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport const StudentPage = () => {\r\n    const studentId = useParams().id\r\n    const history = useHistory()\r\n    const message = useMessage()\r\n    const { loading, error, request, clearError } = useHttp();\r\n\r\n    const emptyForm = {\r\n        firstname: \"\", lastname: \"\", patronymic: \"\",\r\n        birthdate: \"\", gender: \"\", email: \"\",\r\n        phone: \"\", arrivaldate: \"\", leavedate: \"\", room: {}\r\n    }\r\n\r\n    const [form, setForm] = useState(emptyForm)\r\n    const [rooms, setRooms] = useState([])\r\n    const [currentStudent, setCurrentStudent] = useState(emptyForm)\r\n\r\n    const changeHandler = event => {\r\n        try {\r\n            if (event.target.name === \"arrivaldate\" ||\r\n                event.target.name === \"birthdate\" ||\r\n                event.target.name === \"leavedate\") {\r\n                console.log(event.target.value)\r\n                event.target.value = dateFormat(event.target.value, 'yyyy-mm-dd')\r\n            }\r\n            setForm({ ...form, [event.target.name]: event.target.value })\r\n        }\r\n        catch (e) {\r\n\r\n        }\r\n    }\r\n    const saveHandler = async () => {\r\n        try {\r\n            const saveParams = { ...form }\r\n            saveParams.leavedate = dateFormat(saveParams.leavedate, 'dd.mm.yyyy')\r\n            saveParams.birthdate = dateFormat(saveParams.birthdate, 'dd.mm.yyyy')\r\n            saveParams.arrivaldate = dateFormat(saveParams.arrivaldate, 'dd.mm.yyyy')\r\n            console.log(saveParams)\r\n            const data = await request(`/api/students/${studentId}`, 'PUT', { ...saveParams })\r\n            message(data.message)\r\n            fetchStudent()\r\n            cancelHandler()\r\n        } catch (e) {\r\n            message(e.message)\r\n        }\r\n    }\r\n    const cancelHandler = () => {\r\n        setForm(currentStudent)\r\n        disableForm(true)\r\n        document.querySelector('#edit-button').removeAttribute('disabled')\r\n        document.querySelector('#cancel-button').setAttribute('disabled', '')\r\n    }\r\n\r\n    const editHandler = () => {\r\n        disableForm(false)\r\n        document.querySelector('#edit-button').setAttribute('disabled', '')\r\n        document.querySelector('#cancel-button').removeAttribute('disabled')\r\n    }\r\n    const deleteHandler = useCallback(async () => {\r\n        try {\r\n            debugger\r\n            const fetched = await request(`/api/students/${studentId}`, 'DELETE')\r\n            history.goBack()\r\n        } catch (e) {\r\n        }\r\n    }, [request])\r\n    const fetchStudent = useCallback(async () => {\r\n        try {\r\n            const fetched = await request(`/api/students/${studentId}`, 'GET')\r\n            setForm(fetched)\r\n            setCurrentStudent(fetched)\r\n        } catch (e) { }\r\n    }, [request])\r\n\r\n    const fetchRooms = useCallback(async () => {\r\n        try {\r\n            const data = await request('/api/rooms/', 'GET')\r\n            setRooms(data)\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }, [request])\r\n\r\n    const disableForm = (value) => {\r\n        const elements = document.querySelectorAll(\".room-form\")\r\n        if (value) {\r\n            elements.forEach(elem => {\r\n                elem.setAttribute('disabled', '')\r\n            })\r\n        }\r\n        else {\r\n            elements.forEach(elem => {\r\n                elem.removeAttribute('disabled')\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchStudent()\r\n        fetchRooms()\r\n        var elems = document.querySelectorAll('.datepicker');\r\n        var instances = window.M.Datepicker.init(elems);\r\n        var elems2 = document.querySelectorAll('select');\r\n        var instances2 = window.M.FormSelect.init(elems2);\r\n        disableForm(true)\r\n    }, [fetchStudent, fetchRooms])\r\n\r\n    return (\r\n        <div className=\"room-container\">\r\n            <div className=\"header-container\">\r\n                <div className=\"label-value-container\">\r\n                    <div className=\"label-value\">\r\n                        <div className=\"label\">ФИО:</div>\r\n                        <div className=\"value\">{`${currentStudent.firstname} ${currentStudent.firstname[0]}. ${currentStudent.patronymic[0]}.`}</div>\r\n                    </div>\r\n                    <div className=\"label-value\">\r\n                        <div className=\"label\">Дата рождения:</div>\r\n                        <div className=\"value\">{dateFormat(currentStudent.birthdate, 'dd.mm.yyyy')}</div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"label-value-container\">\r\n                    <div className=\"label-value\">\r\n                        <div className=\"label\">Пол:</div>\r\n                        <div className=\"value\">{currentStudent.gender}</div>\r\n                    </div>\r\n                    <div className=\"label-value\">\r\n                        <div className=\"label\">Почта:</div>\r\n                        <div className=\"value\">{currentStudent.email}</div>\r\n                    </div>\r\n                    <div className=\"label-value\">\r\n                        <div className=\"label\">Телефон:</div>\r\n                        <div className=\"value\">{currentStudent.phone}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"label-value-container\">\r\n                    <div className=\"label-value\">\r\n                        <div className=\"label\">Заселение:</div>\r\n                        <div className=\"value\">{dateFormat(currentStudent.arrivaldate, 'dd.mm.yyyy')}</div>\r\n                    </div>\r\n                    <div className=\"label-value\">\r\n                        <div className=\"label\">Выселение:</div>\r\n                        <div className=\"value\">{dateFormat(currentStudent.leavedate, 'dd.mm.yyyy')}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"indicator indicator-default\"></div>\r\n            <div class=\"room-content room-overflow\">\r\n                <div className=\"row\">\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"firstname\">Имя</label>\r\n                        <input id=\"firstname\"\r\n                            type=\"text\"\r\n                            name=\"firstname\"\r\n                            onChange={changeHandler}\r\n                            value={form.firstname} disabled\r\n                            className=\"room-form\" />\r\n                    </div>\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"lastname\">Фамилия</label>\r\n                        <input id=\"lastname\"\r\n                            type=\"text\"\r\n                            name=\"lastname\"\r\n                            value={form.lastname}\r\n                            onChange={changeHandler} disabled\r\n                            className=\"room-form\" />\r\n                    </div>\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"patronymic\">Отчество</label>\r\n                        <input id=\"patronymic\"\r\n                            type=\"text\"\r\n                            name=\"patronymic\"\r\n                            value={form.patronymic}\r\n                            onChange={changeHandler} disabled\r\n                            className=\"room-form\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"birthdate\">Дата рождения</label>\r\n                        <input id=\"birthdate\"\r\n                            type=\"text\"\r\n                            name=\"birthdate\"\r\n                            value={dateFormat(form.birthdate, 'dd.mm.yyyy')}\r\n                            className=\"datepicker room-form\"\r\n                            onSelect={changeHandler} disabled />\r\n                    </div>\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"gender\">Пол</label>\r\n                        <div>\r\n                            <select class=\"browser-default room-form\"\r\n                                id=\"gender\"\r\n                                name=\"gender\"\r\n                                onChange={changeHandler} disabled>\r\n                                <option value=\"\" selected id=\"default-select\">Любой</option>\r\n                                <option value=\"Мужской\">Мужской</option>\r\n                                <option value=\"Женский\">Женский</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"roomnumber\">Номер комнаты</label>\r\n                        <select className=\"browser-default room-form\"\r\n                            id=\"roomnumber\"\r\n                            name=\"roomnumber\"\r\n                            onChange={changeHandler}\r\n                            disabled>\r\n                            <option value={form.room.roomnumber} selected disabled>{form.room.roomnumber}</option>\r\n                            {rooms.map((room, index) => {\r\n                                if (room.roomsize - room.students.length > 0 && room.id !== form.room.id) {\r\n                                    return (<option value={room.id}>Номер комнаты: {room.roomnumber}, Свободных мест: {room.roomsize - room.students.length}</option>)\r\n                                }\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input id=\"email\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            value={form.email}\r\n                            onChange={changeHandler} disabled\r\n                            className=\"room-form\" />\r\n                    </div>\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"phone\">Телефон</label>\r\n                        <input id=\"phone\"\r\n                            type=\"text\"\r\n                            name=\"phone\"\r\n                            value={form.phone}\r\n                            onChange={changeHandler} disabled\r\n                            className=\"room-form\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"arrivaldate\">Дата заселения</label>\r\n                        <input id=\"arrivaldate\"\r\n                            type=\"text\"\r\n                            name=\"arrivaldate\"\r\n                            value={dateFormat(form.arrivaldate, 'dd.mm.yyyy')}\r\n                            onSelect={changeHandler}\r\n                            className=\"datepicker room-form\" disabled />\r\n                    </div>\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"leavedate\">Дата выселения</label>\r\n                        <input id=\"leavedate\"\r\n                            type=\"text\"\r\n                            name=\"leavedate\"\r\n                            value={dateFormat(form.leavedate, 'dd.mm.yyyy')}\r\n                            onSelect={changeHandler}\r\n                            className=\"datepicker room-form\" disabled />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"footer-save\">\r\n                <div className=\"footer-add-button\">\r\n                    <a className=\"waves-effect waves-light btn footer-button\"\r\n                        id=\"delete-button\"\r\n                        onClick={deleteHandler}\r\n                    >Удалить</a>\r\n                </div>\r\n                <div className=\"footer-buttons\">\r\n                    <a className=\"waves-effect waves-light btn footer-button\"\r\n                        id=\"edit-button\"\r\n                        onClick={editHandler}\r\n                    >Изменить</a>\r\n                    <a className=\"waves-effect waves-light btn-flat footer-button cancel-button\" disabled\r\n                        id=\"cancel-button\"\r\n                        onClick={cancelHandler}\r\n                    >Отмена</a>\r\n                    <a className=\"waves-effect waves-light btn footer-button red accent-4\"\r\n                        onClick={saveHandler}\r\n                    >Сохранить</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\pages\\RoomPage.js",["123","124","125","126","127","128","129","130","131","132","133","134"],"D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\pages\\StudentsPage.js",[],"D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\hooks\\message.js",[],"D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\hooks\\http.js",[],"D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\context\\AuthContext.js",[],"D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\hooks\\auth.js",[],"D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\components\\Header.js",[],"D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\pages\\CreateStudentPage.js",["135","136","137","138","139","140","141","142","143"],"import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { useHttp } from '../hooks/http';\r\nimport { useMessage } from '../hooks/message';\r\nimport '../style/search.css'\r\nimport 'materialize-css'\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nexport const CreateStudentPage = () => {\r\n    const roomdId = useParams().id\r\n    const message = useMessage()\r\n    const { loading, error, request, clearError } = useHttp();\r\n    const emptyForm = {\r\n        firstname: \"\", lastname: \"\", patronymic: \"\",\r\n        birthdate: \"\", gender: \"\", email: \"\",\r\n        phone: \"\", arrivaldate: \"\", leavedate: \"\"\r\n    }\r\n\r\n    const emptyRoom = {\r\n        roomnumber: \"\"\r\n    }\r\n    const [room, setRoom] = useState(emptyRoom)\r\n    const [form, setForm] = useState(emptyForm)\r\n    const changeHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value })\r\n    }\r\n    const resetHandler = () => {\r\n        setForm(emptyForm)\r\n        document.querySelector(\"#default-select\").selected = true\r\n    }\r\n    const createStudent = async () => {\r\n        try {\r\n            const val = { ...form }\r\n            val.room_id = roomdId\r\n            const data = await request('/api/students/', 'POST', { ...val })\r\n            message(data.message)\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n    const fetchRoom = useCallback(async () => {\r\n        try {\r\n            const data = await request(`/api/rooms/${roomdId}`, 'GET')\r\n            setRoom(data)\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    },[request])\r\n    useEffect(() => {\r\n        fetchRoom()\r\n        var elems = document.querySelectorAll('.datepicker');\r\n        var instances = window.M.Datepicker.init(elems, { format: 'dd.mm.yyyy' });\r\n        var elems2 = document.querySelectorAll('select');\r\n        var instances2 = window.M.FormSelect.init(elems2, {});\r\n    }, [fetchRoom])\r\n    return (\r\n        <div>\r\n            <div className=\"search-container create-student\">\r\n                <div className=\"row\">\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"firstname\">Имя</label>\r\n                        <input id=\"firstname\"\r\n                            type=\"text\"\r\n                            name=\"firstname\"\r\n                            onChange={changeHandler}\r\n                            value={form.firstname} />\r\n                    </div>\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"lastname\">Фамилия</label>\r\n                        <input id=\"lastname\"\r\n                            type=\"text\"\r\n                            name=\"lastname\"\r\n                            value={form.lastname}\r\n                            onChange={changeHandler} />\r\n                    </div>\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"patronymic\">Отчество</label>\r\n                        <input id=\"patronymic\"\r\n                            type=\"text\"\r\n                            name=\"patronymic\"\r\n                            value={form.patronymic}\r\n                            onChange={changeHandler} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"birthdate\">Дата рождения</label>\r\n                        <input id=\"birthdate\"\r\n                            type=\"text\"\r\n                            name=\"birthdate\"\r\n                            value={form.birthdate}\r\n                            className=\"datepicker\"\r\n                            onSelect={changeHandler} />\r\n                    </div>\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"gender\">Пол</label>\r\n                        <div>\r\n                            <select class=\"browser-default\"\r\n                                id=\"gender\"\r\n                                name=\"gender\"\r\n                                onChange={changeHandler}>\r\n                                <option value=\"\" selected id=\"default-select\">Любой</option>\r\n                                <option value=\"Мужской\">Мужской</option>\r\n                                <option value=\"Женский\">Женский</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"roomnumber\">Номер комнаты</label>\r\n                        <input id=\"roomnumber\"\r\n                            type=\"text\"\r\n                            name=\"roomnumber\"\r\n                            value={room.roomnumber}\r\n                            onChange={changeHandler} disabled />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input id=\"email\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            value={form.email}\r\n                            onChange={changeHandler} />\r\n                    </div>\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"phone\">Телефон</label>\r\n                        <input id=\"phone\"\r\n                            type=\"text\"\r\n                            name=\"phone\"\r\n                            value={form.phone}\r\n                            onChange={changeHandler} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"arrivaldate\">Дата заселения</label>\r\n                        <input id=\"arrivaldate\"\r\n                            type=\"text\"\r\n                            name=\"arrivaldate\"\r\n                            value={form.arrivaldate}\r\n                            onSelect={changeHandler}\r\n                            className=\"datepicker\" />\r\n                    </div>\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"leavedate\">Дата выселения</label>\r\n                        <input id=\"leavedate\"\r\n                            type=\"text\"\r\n                            name=\"leavedate\"\r\n                            value={form.leavedate}\r\n                            onSelect={changeHandler}\r\n                            className=\"datepicker\" />\r\n                    </div>\r\n                    <div className=\"bottom-row\">\r\n                        <a className=\"waves-effect waves-light btn-flat reset-button\"\r\n                            onClick={resetHandler}>Сбросить</a>\r\n                        <a className=\"waves-effect waves-light btn red accent-4 search-button\"\r\n                            onClick={createStudent}>Создать</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\components\\Rooms\\SearchRooms.js",["144","145","146","147","148","149","150","151"],"import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { useHttp } from '../../hooks/http';\r\nimport { useMessage } from '../../hooks/message';\r\nimport { RoomsTable } from './RoomsTable'\r\nimport '../../style/search.css'\r\nimport 'materialize-css'\r\n\r\nexport const SearchRooms = () => {\r\n    const { loading, error, request, clearError } = useHttp();\r\n    const emptyForm = {\r\n        roomnumber: \"\", roomsize: \"\",\r\n        emptyplaces: \"\", floornumber: \"\",\r\n        inventory: \"\"\r\n    }\r\n    const emptyChkbks = {\r\n        emptyroom: false, storeroom: false\r\n    }\r\n    const [form, setForm] = useState(emptyForm)\r\n    const [checkbs, setCheckbs] = useState(emptyChkbks)\r\n    const [rooms, setRooms] = useState([])\r\n\r\n    const checkbsChangeHandler = event => {\r\n        setCheckbs({ ...checkbs, [event.target.name]: event.target.checked })\r\n    }\r\n    const changeHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value })\r\n    }\r\n    const searchHandler = async () => {\r\n        try {\r\n            const searchParams = { ...form, ...checkbs }\r\n            Object.keys(searchParams).forEach((key) => (searchParams[key] == \"\") && delete searchParams[key])\r\n            const data = await request('/api/rooms/search', 'POST', { ...searchParams })\r\n            setRooms({})\r\n            setRooms(data)\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n    const resetHandler = () => {\r\n        setForm(emptyForm)\r\n        setCheckbs(emptyChkbks)\r\n        document.querySelector(\"#storeroom\").checked = false;\r\n        document.querySelector(\"#emptyroom\").checked = false;\r\n        fetchRooms()\r\n    }\r\n    const fetchRooms = useCallback(async () => {\r\n        try {\r\n            const fetched = await request('/api/rooms', 'GET')\r\n            setRooms({})\r\n            setRooms(fetched)\r\n        } catch (e) { }\r\n    }, [request])\r\n\r\n    useEffect(() => {\r\n        fetchRooms()\r\n    }, [fetchRooms])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"search-container search-rooms\">\r\n                <div className=\"row\">\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"roomnumber\">Номер комнаты</label>\r\n                        <input id=\"roomnumber\"\r\n                            type=\"text\"\r\n                            name=\"roomnumber\"\r\n                            onChange={changeHandler}\r\n                            value={form.roomnumber}/>\r\n                    </div>\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"roomsize\">Размер комнаты</label>\r\n                        <input id=\"roomsize\"\r\n                            type=\"number\"\r\n                            name=\"roomsize\"\r\n                            value={form.roomsize}\r\n                            onChange={changeHandler}/>\r\n                    </div>\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"emptyplaces\">Количество пустых мест</label>\r\n                        <input id=\"emptyplaces\"\r\n                            type=\"number\"\r\n                            name=\"emptyplaces\"\r\n                            value={form.emptyplaces}\r\n                            onChange={changeHandler}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"floornumber\">Этаж</label>\r\n                        <input id=\"floornumber\"\r\n                            type=\"number\"\r\n                            name=\"floornumber\"\r\n                            value={form.floornumber}\r\n                            onChange={changeHandler}\r\n                            className=\"validate\" />\r\n                    </div>\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"inventory\">Инвентарь</label>\r\n                        <input id=\"inventory\"\r\n                            type=\"text\"\r\n                            name=\"inventory\"\r\n                            value={form.inventory}\r\n                            onChange={changeHandler}\r\n                            className=\"validate\" />\r\n                    </div>\r\n                    <div className=\"checkbox-containter col s4\">\r\n                        <div className=\"col s6\">\r\n                            <label>\r\n                                <input type=\"checkbox\"\r\n                                    name=\"emptyroom\"\r\n                                    id=\"emptyroom\"\r\n                                    onChange={checkbsChangeHandler}\r\n                                />\r\n                                <span>Свободная</span>\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"col s6\">\r\n                            <label>\r\n                                <input type=\"checkbox\"\r\n                                    name=\"storeroom\"\r\n                                    id=\"storeroom\"\r\n                                    onChange={checkbsChangeHandler}\r\n                                />\r\n                                <span>Склад</span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row bottom-row\">\r\n                    <a className=\"waves-effect waves-light btn-flat reset-button\"\r\n                        onClick={resetHandler}>Сбросить</a>\r\n                    <a className=\"waves-effect waves-light btn red accent-4 search-button\"\r\n                        onClick={searchHandler}>GO</a>\r\n                </div>\r\n            </div>\r\n            {<RoomsTable rooms={rooms} />}\r\n        </div>\r\n    )\r\n}","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\components\\Rooms\\RoomsTable.js",["152","153","154","155","156"],"import React from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport '../../style/table.css'\r\nimport 'materialize-css'\r\nimport { useHttp } from '../../hooks/http'\r\n\r\n\r\nexport const RoomsTable = ({ rooms }) => {\r\n    const { loading, error, request, clearError } = useHttp();\r\n    const history = useHistory()\r\n    const getFilehHandler = async () => {\r\n        try {\r\n            const fetched = await request('/api/excel/rooms', 'GET')\r\n            window.location.href = \"http://localhost:4000/api/excel/rooms\"\r\n        } catch (e) {\r\n            console.log(e.message)\r\n            window.location.href = \"http://localhost:4000/api/excel/rooms\"\r\n        }\r\n    }\r\n\r\n    if (!rooms.length) {\r\n        return (\r\n            <div className=\"table-container\">\r\n                <div className=\"create-room\">\r\n                    <Link to={`/createRoom`} >\r\n                        Создать комнату\r\n                </Link>\r\n                </div>\r\n                <p className=\"center\">Комнат нет</p>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"table-container\">\r\n            <div className=\"create-room\">\r\n                <button onClick={getFilehHandler} className=\"btn-flat button-download\">Excel</button>\r\n                <Link to={`/createRoom`} >\r\n                    Создать комнату\r\n                </Link>\r\n            </div>\r\n            <table className=\"striped table teal lighten-2\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Этаж</th>\r\n                        <th>Номер</th>\r\n                        <th>Размер</th>\r\n                        <th>Проживает</th>\r\n                        <th>Свободные места</th>\r\n                        <th>Склад</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {\r\n                        rooms.map(room => {\r\n                            return (\r\n                                <tr>\r\n                                    <td>{room.roomnumber[0]}</td>\r\n                                    <td>{room.roomnumber}</td>\r\n                                    <td>{room.roomsize}</td>\r\n                                    <td>{room.students.length}</td>\r\n                                    <td>{room.roomsize - room.students.length}</td>\r\n                                    <td>\r\n                                        <label>\r\n                                            <input type=\"checkbox\" defaultChecked={room.storeroom} disabled />\r\n                                            <span></span>\r\n                                        </label>\r\n                                    </td>\r\n                                    <td>\r\n                                        <Link to={`/room/${room.id}`} >\r\n                                            <i className=\"small material-icons light-blue darken-4\">chevron_right</i>\r\n                                        </Link>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\components\\Students\\SearchStudents.js",["157","158","159","160","161","162","163","164","165","166","167"],"import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { useHttp } from '../../hooks/http';\r\nimport { useMessage } from '../../hooks/message';\r\nimport { StudentsTable } from './StudentsTable'\r\nimport '../../style/search.css'\r\nimport 'materialize-css'\r\nimport ReactTestUtils from 'react-dom/test-utils'\r\nexport const SearchStudents = () => {\r\n    const { loading, error, request, clearError } = useHttp();\r\n    const emptyForm = {\r\n        firstname: \"\", lastname: \"\", patronymic: \"\",\r\n        birthdate: \"\", gender: \"\", email: \"\",\r\n        phone: \"\", arrivaldate: \"\", leavedate: \"\",\r\n        roomnumber: \"\"\r\n    }\r\n\r\n    const [form, setForm] = useState(emptyForm)\r\n    const [students, setStudents] = useState([])\r\n\r\n    const changeHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value })\r\n    }\r\n    const searchHandler = async () => {\r\n        try {\r\n            const searchParams = { ...form }\r\n            Object.keys(searchParams).forEach((key) => (searchParams[key] == \"\") && delete searchParams[key])\r\n            const data = await request('/api/students/search', 'POST', { ...searchParams })\r\n            setStudents(data)\r\n        } catch (e) {\r\n        }\r\n    }\r\n    const resetHandler = () => {\r\n        setForm(emptyForm)\r\n        document.querySelector(\"#default-select\").selected = true\r\n        fetchStudents()\r\n    }\r\n    const fetchStudents = useCallback(async () => {\r\n        try {\r\n            const fetched = await request('/api/students', 'GET')\r\n            setStudents(fetched)\r\n        } catch (e) { }\r\n    }, [request])\r\n\r\n    useEffect(() => {\r\n        fetchStudents()\r\n        var elems = document.querySelectorAll('.datepicker');\r\n        var instances = window.M.Datepicker.init(elems, { format: 'dd.mm.yyyy' });\r\n        var elems2 = document.querySelectorAll('select');\r\n        var instances2 = window.M.FormSelect.init(elems2, {});\r\n    }, [fetchStudents])\r\n    return (\r\n        <div>\r\n            <div className=\"search-container\">\r\n                <div className=\"row\">\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"firstname\">Имя</label>\r\n                        <input id=\"firstname\"\r\n                            type=\"text\"\r\n                            name=\"firstname\"\r\n                            onChange={changeHandler}\r\n                            value={form.firstname}/>\r\n                    </div>\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"lastname\">Фамилия</label>\r\n                        <input id=\"lastname\"\r\n                            type=\"text\"\r\n                            name=\"lastname\"\r\n                            value={form.lastname}\r\n                            onChange={changeHandler}/>\r\n                    </div>\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"patronymic\">Отчество</label>\r\n                        <input id=\"patronymic\"\r\n                            type=\"text\"\r\n                            name=\"patronymic\"\r\n                            value={form.patronymic}\r\n                            onChange={changeHandler}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"birthdate\">Дата рождения</label>\r\n                        <input id=\"birthdate\"\r\n                            type=\"text\"\r\n                            name=\"birthdate\"\r\n                            value={form.birthdate}\r\n                            onSelect={changeHandler}/>\r\n                    </div>\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"gender\">Пол</label>\r\n                        <div>\r\n                            <select class=\"browser-default\"\r\n                                id=\"gender\"\r\n                                name=\"gender\"\r\n                                onChange={changeHandler}>\r\n                                <option value=\"\" selected id=\"default-select\">Любой</option>\r\n                                <option value=\"Мужской\">Мужской</option>\r\n                                <option value=\"Женский\">Женский</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"roomnumber\">Номер комнаты</label>\r\n                        <input id=\"roomnumber\"\r\n                            type=\"text\"\r\n                            name=\"roomnumber\"\r\n                            value={form.roomnumber}\r\n                            onChange={changeHandler}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input id=\"email\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            value={form.email}\r\n                            onChange={changeHandler}/>\r\n                    </div>\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"phone\">Телефон</label>\r\n                        <input id=\"phone\"\r\n                            type=\"text\"\r\n                            name=\"phone\"\r\n                            value={form.phone}\r\n                            onChange={changeHandler}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"arrivaldate\">Дата заселения</label>\r\n                        <input id=\"arrivaldate\"\r\n                            type=\"text\"\r\n                            name=\"arrivaldate\"\r\n                            value={form.arrivaldate}\r\n                            onSelect={changeHandler}\r\n                            className=\"datepicker\" />\r\n                    </div>\r\n                    <div className=\"search-input-field col s4\">\r\n                        <label htmlFor=\"leavedate\">Дата выселения</label>\r\n                        <input id=\"leavedate\"\r\n                            type=\"text\"\r\n                            name=\"leavedate\"\r\n                            value={form.leavedate}\r\n                            onSelect={changeHandler}\r\n                            className=\"datepicker\" />\r\n                    </div>\r\n                    <div className=\"bottom-row\">\r\n                        <a className=\"waves-effect waves-light btn-flat reset-button\"\r\n                            onClick={resetHandler}>Сбросить</a>\r\n                        <a className=\"waves-effect waves-light btn red accent-4 search-button\"\r\n                            onClick={searchHandler}>GO</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            { <StudentsTable students={students} />}\r\n        </div >\r\n    )\r\n}","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\components\\Students\\StudentsTable.js",["168","169","170","171","172"],"import React from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport '../../style/table.css'\r\nimport 'materialize-css'\r\nimport dateFormat from 'dateformat';\r\nimport { useHttp } from '../../hooks/http';\r\n\r\nexport const StudentsTable = ({ students }) => {\r\n    const { loading, error, request, clearError } = useHttp();\r\n\r\n    const getFilehHandler = async () => {\r\n        try {\r\n            const fetched = await request('/api/excel/students', 'GET')\r\n            window.location.href = \"http://localhost:4000/api/excel/students\"\r\n        } catch (e) {\r\n            window.location.href = \"http://localhost:4000/api/excel/students\"\r\n            console.log(e.message)\r\n        }\r\n    }\r\n\r\n    if (!students.length) {\r\n        return (\r\n            <div className=\"table-container\">\r\n                <div className=\"create-room\">\r\n                    <Link to={`/chooseRoom`} >\r\n                        Добавить студента\r\n                </Link>\r\n                </div>\r\n                <p className=\"center\">Студентов нет</p>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"table-container\">\r\n            <div className=\"create-room\">\r\n            <button onClick={getFilehHandler} className=\"btn-flat button-download\">Excel</button>\r\n                <Link to={`/chooseRoom`} >\r\n                    Добавить студента\r\n                </Link>\r\n            </div>\r\n            <table className=\"striped table teal lighten-2\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ФИО</th>\r\n                        <th>Комната</th>\r\n                        <th>Дата рождения</th>\r\n                        <th>Пол</th>\r\n                        <th>Почта</th>\r\n                        <th>Телефон</th>\r\n                        <th>Заселение</th>\r\n                        <th>Выселение</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {\r\n                        students.map(student => {\r\n                            return (\r\n                                <tr>\r\n                                    <td>{`${student.firstname} ${student.firstname[0]}. ${student.patronymic[0]}.`}</td>\r\n                                    <td>{student.room.roomnumber}</td>\r\n                                    <td>{dateFormat(student.birthdate, 'dd.mm.yyyy')}</td>\r\n                                    <td>{student.gender}</td>\r\n                                    <td>{student.email}</td>\r\n                                    <td>{student.phone}</td>\r\n                                    <td>{dateFormat(student.arrivaldate, 'dd.mm.yyyy')}</td>\r\n                                    <td>{dateFormat(student.leavedate, 'dd.mm.yyyy')}</td>\r\n                                    <td>\r\n                                        <Link to={`/student/${student.id}`} >\r\n                                            <i className=\"small material-icons light-blue darken-4\">chevron_right</i>\r\n                                        </Link>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\pages\\ChooseRoom.js",["173","174","175","176","177","178","179","180"],"import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { useHttp } from '../hooks/http';\r\nimport { useMessage } from '../hooks/message';\r\n\r\nexport const ChooseRoom = () => {\r\n    const message = useMessage()\r\n    const history = useHistory()\r\n    const { loading, error, request, clearError } = useHttp();\r\n    const [form, setForm] = useState({})\r\n    const [rooms, setRooms] = useState([])\r\n\r\n    const changeHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value })\r\n        document.querySelector(\"#next-button\").removeAttribute('disabled', '')\r\n    }\r\n\r\n    const fetchRooms = useCallback(async () => {\r\n        try {\r\n            const data = await request('/api/rooms/', 'GET')\r\n            setRooms(data)\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }, [request])\r\n\r\n\r\n    useEffect(() => {\r\n        fetchRooms()\r\n    }, [fetchRooms])\r\n\r\n\r\n    return (\r\n        <div >\r\n            <div className=\"table-container choose-room\">\r\n                <select className=\"browser-default\"\r\n                    id=\"room\"\r\n                    name=\"room\"\r\n                    onChange={changeHandler}>\r\n                    <option value=\"\" selected disabled>Любой</option>\r\n                    {rooms.map((room, index) => {\r\n                        if (room.roomsize - room.students.length > 0) {\r\n                            return (<option value={room.id}>Номер комнаты: {room.roomnumber}, Свободных мест: {room.roomsize - room.students.length}</option>)\r\n                        }\r\n                    })}\r\n                </select>\r\n            </div>\r\n            <div className=\"footer-save footer-choose\">\r\n                <div className=\"footer-create-button\">\r\n                    <a className=\"waves-effect waves-light btn save-red-button\" id=\"next-button\" disabled>\r\n                        <Link to={`/createStudent/${form.room}`} className=\"next-red-button\">\r\n                            Дальше\r\n                    </Link>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","D:\\myFolder\\asp.net course\\Hostel Manage\\client\\src\\components\\Rooms\\StudentsInfo.js",[],{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":10,"column":13,"nodeType":"187","messageId":"188","endLine":10,"endColumn":20},{"ruleId":"185","severity":1,"message":"189","line":44,"column":13,"nodeType":"187","messageId":"188","endLine":44,"endColumn":21},{"ruleId":"190","severity":1,"message":"191","line":98,"column":21,"nodeType":"192","endLine":99,"endColumn":47},{"ruleId":"185","severity":1,"message":"193","line":4,"column":10,"nodeType":"187","messageId":"188","endLine":4,"endColumn":14},{"ruleId":"185","severity":1,"message":"194","line":5,"column":10,"nodeType":"187","messageId":"188","endLine":5,"endColumn":15},{"ruleId":"185","severity":1,"message":"186","line":13,"column":13,"nodeType":"187","messageId":"188","endLine":13,"endColumn":20},{"ruleId":"185","severity":1,"message":"195","line":13,"column":22,"nodeType":"187","messageId":"188","endLine":13,"endColumn":27},{"ruleId":"185","severity":1,"message":"196","line":13,"column":38,"nodeType":"187","messageId":"188","endLine":13,"endColumn":48},{"ruleId":"185","severity":1,"message":"197","line":69,"column":19,"nodeType":"187","messageId":"188","endLine":69,"endColumn":26},{"ruleId":"198","severity":1,"message":"199","line":73,"column":8,"nodeType":"200","endLine":73,"endColumn":17,"suggestions":"201"},{"ruleId":"198","severity":1,"message":"202","line":80,"column":8,"nodeType":"200","endLine":80,"endColumn":17,"suggestions":"203"},{"ruleId":"185","severity":1,"message":"204","line":110,"column":13,"nodeType":"187","messageId":"188","endLine":110,"endColumn":22},{"ruleId":"185","severity":1,"message":"205","line":112,"column":13,"nodeType":"187","messageId":"188","endLine":112,"endColumn":23},{"ruleId":"206","severity":1,"message":"207","line":218,"column":54,"nodeType":"208","messageId":"209","endLine":218,"endColumn":56},{"ruleId":"190","severity":1,"message":"191","line":269,"column":21,"nodeType":"192","endLine":272,"endColumn":22},{"ruleId":"190","severity":1,"message":"191","line":275,"column":21,"nodeType":"192","endLine":278,"endColumn":22},{"ruleId":"190","severity":1,"message":"191","line":279,"column":21,"nodeType":"192","endLine":282,"endColumn":22},{"ruleId":"190","severity":1,"message":"191","line":283,"column":21,"nodeType":"192","endLine":285,"endColumn":22},{"ruleId":"185","severity":1,"message":"194","line":5,"column":10,"nodeType":"187","messageId":"188","endLine":5,"endColumn":15},{"ruleId":"185","severity":1,"message":"210","line":7,"column":10,"nodeType":"187","messageId":"188","endLine":7,"endColumn":23},{"ruleId":"185","severity":1,"message":"211","line":12,"column":11,"nodeType":"187","messageId":"188","endLine":12,"endColumn":18},{"ruleId":"185","severity":1,"message":"186","line":14,"column":13,"nodeType":"187","messageId":"188","endLine":14,"endColumn":20},{"ruleId":"185","severity":1,"message":"195","line":14,"column":22,"nodeType":"187","messageId":"188","endLine":14,"endColumn":27},{"ruleId":"185","severity":1,"message":"196","line":14,"column":38,"nodeType":"187","messageId":"188","endLine":14,"endColumn":48},{"ruleId":"198","severity":1,"message":"212","line":74,"column":8,"nodeType":"200","endLine":74,"endColumn":17,"suggestions":"213"},{"ruleId":"198","severity":1,"message":"214","line":94,"column":8,"nodeType":"200","endLine":94,"endColumn":19,"suggestions":"215"},{"ruleId":"190","severity":1,"message":"191","line":200,"column":21,"nodeType":"192","endLine":200,"endColumn":96},{"ruleId":"190","severity":1,"message":"191","line":207,"column":21,"nodeType":"192","endLine":210,"endColumn":22},{"ruleId":"190","severity":1,"message":"191","line":211,"column":21,"nodeType":"192","endLine":214,"endColumn":22},{"ruleId":"190","severity":1,"message":"191","line":215,"column":21,"nodeType":"192","endLine":217,"endColumn":22},{"ruleId":"185","severity":1,"message":"216","line":1,"column":30,"nodeType":"187","messageId":"188","endLine":1,"endColumn":40},{"ruleId":"185","severity":1,"message":"186","line":12,"column":13,"nodeType":"187","messageId":"188","endLine":12,"endColumn":20},{"ruleId":"185","severity":1,"message":"195","line":12,"column":22,"nodeType":"187","messageId":"188","endLine":12,"endColumn":27},{"ruleId":"185","severity":1,"message":"196","line":12,"column":38,"nodeType":"187","messageId":"188","endLine":12,"endColumn":48},{"ruleId":"198","severity":1,"message":"212","line":48,"column":7,"nodeType":"200","endLine":48,"endColumn":16,"suggestions":"217"},{"ruleId":"185","severity":1,"message":"204","line":52,"column":13,"nodeType":"187","messageId":"188","endLine":52,"endColumn":22},{"ruleId":"185","severity":1,"message":"205","line":54,"column":13,"nodeType":"187","messageId":"188","endLine":54,"endColumn":23},{"ruleId":"190","severity":1,"message":"191","line":156,"column":25,"nodeType":"192","endLine":157,"endColumn":52},{"ruleId":"190","severity":1,"message":"191","line":158,"column":25,"nodeType":"192","endLine":159,"endColumn":53},{"ruleId":"185","severity":1,"message":"216","line":1,"column":30,"nodeType":"187","messageId":"188","endLine":1,"endColumn":40},{"ruleId":"185","severity":1,"message":"218","line":3,"column":10,"nodeType":"187","messageId":"188","endLine":3,"endColumn":20},{"ruleId":"185","severity":1,"message":"186","line":9,"column":13,"nodeType":"187","messageId":"188","endLine":9,"endColumn":20},{"ruleId":"185","severity":1,"message":"195","line":9,"column":22,"nodeType":"187","messageId":"188","endLine":9,"endColumn":27},{"ruleId":"185","severity":1,"message":"196","line":9,"column":38,"nodeType":"187","messageId":"188","endLine":9,"endColumn":48},{"ruleId":"219","severity":1,"message":"220","line":31,"column":75,"nodeType":"221","messageId":"222","endLine":31,"endColumn":77},{"ruleId":"190","severity":1,"message":"191","line":131,"column":21,"nodeType":"192","endLine":132,"endColumn":48},{"ruleId":"190","severity":1,"message":"191","line":133,"column":21,"nodeType":"192","endLine":134,"endColumn":49},{"ruleId":"185","severity":1,"message":"186","line":9,"column":13,"nodeType":"187","messageId":"188","endLine":9,"endColumn":20},{"ruleId":"185","severity":1,"message":"195","line":9,"column":22,"nodeType":"187","messageId":"188","endLine":9,"endColumn":27},{"ruleId":"185","severity":1,"message":"196","line":9,"column":38,"nodeType":"187","messageId":"188","endLine":9,"endColumn":48},{"ruleId":"185","severity":1,"message":"211","line":10,"column":11,"nodeType":"187","messageId":"188","endLine":10,"endColumn":18},{"ruleId":"185","severity":1,"message":"197","line":13,"column":19,"nodeType":"187","messageId":"188","endLine":13,"endColumn":26},{"ruleId":"185","severity":1,"message":"216","line":1,"column":30,"nodeType":"187","messageId":"188","endLine":1,"endColumn":40},{"ruleId":"185","severity":1,"message":"218","line":3,"column":10,"nodeType":"187","messageId":"188","endLine":3,"endColumn":20},{"ruleId":"185","severity":1,"message":"223","line":7,"column":8,"nodeType":"187","messageId":"188","endLine":7,"endColumn":22},{"ruleId":"185","severity":1,"message":"186","line":9,"column":13,"nodeType":"187","messageId":"188","endLine":9,"endColumn":20},{"ruleId":"185","severity":1,"message":"195","line":9,"column":22,"nodeType":"187","messageId":"188","endLine":9,"endColumn":27},{"ruleId":"185","severity":1,"message":"196","line":9,"column":38,"nodeType":"187","messageId":"188","endLine":9,"endColumn":48},{"ruleId":"219","severity":1,"message":"220","line":26,"column":75,"nodeType":"221","messageId":"222","endLine":26,"endColumn":77},{"ruleId":"185","severity":1,"message":"204","line":47,"column":13,"nodeType":"187","messageId":"188","endLine":47,"endColumn":22},{"ruleId":"185","severity":1,"message":"205","line":49,"column":13,"nodeType":"187","messageId":"188","endLine":49,"endColumn":23},{"ruleId":"190","severity":1,"message":"191","line":150,"column":25,"nodeType":"192","endLine":151,"endColumn":52},{"ruleId":"190","severity":1,"message":"191","line":152,"column":25,"nodeType":"192","endLine":153,"endColumn":53},{"ruleId":"185","severity":1,"message":"224","line":2,"column":16,"nodeType":"187","messageId":"188","endLine":2,"endColumn":26},{"ruleId":"185","severity":1,"message":"186","line":9,"column":13,"nodeType":"187","messageId":"188","endLine":9,"endColumn":20},{"ruleId":"185","severity":1,"message":"195","line":9,"column":22,"nodeType":"187","messageId":"188","endLine":9,"endColumn":27},{"ruleId":"185","severity":1,"message":"196","line":9,"column":38,"nodeType":"187","messageId":"188","endLine":9,"endColumn":48},{"ruleId":"185","severity":1,"message":"197","line":13,"column":19,"nodeType":"187","messageId":"188","endLine":13,"endColumn":26},{"ruleId":"185","severity":1,"message":"225","line":2,"column":28,"nodeType":"187","messageId":"188","endLine":2,"endColumn":37},{"ruleId":"185","severity":1,"message":"226","line":7,"column":11,"nodeType":"187","messageId":"188","endLine":7,"endColumn":18},{"ruleId":"185","severity":1,"message":"211","line":8,"column":11,"nodeType":"187","messageId":"188","endLine":8,"endColumn":18},{"ruleId":"185","severity":1,"message":"186","line":9,"column":13,"nodeType":"187","messageId":"188","endLine":9,"endColumn":20},{"ruleId":"185","severity":1,"message":"195","line":9,"column":22,"nodeType":"187","messageId":"188","endLine":9,"endColumn":27},{"ruleId":"185","severity":1,"message":"196","line":9,"column":38,"nodeType":"187","messageId":"188","endLine":9,"endColumn":48},{"ruleId":"206","severity":1,"message":"207","line":41,"column":46,"nodeType":"208","messageId":"209","endLine":41,"endColumn":48},{"ruleId":"190","severity":1,"message":"191","line":50,"column":21,"nodeType":"192","endLine":50,"endColumn":107},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'instance' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Link' is defined but never used.","'check' is defined but never used.","'error' is assigned a value but never used.","'clearError' is assigned a value but never used.","'fetched' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'history' and 'studentId'. Either include them or remove the dependency array.","ArrayExpression",["229"],"React Hook useCallback has a missing dependency: 'studentId'. Either include it or remove the dependency array.",["230"],"'instances' is assigned a value but never used.","'instances2' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'StudentsTable' is defined but never used.","'history' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'roomdId'. Either include it or remove the dependency array.",["231"],"React Hook useEffect has a missing dependency: 'currentRoom.storeroom'. Either include it or remove the dependency array.",["232"],"'useContext' is defined but never used.",["233"],"'useMessage' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ReactTestUtils' is defined but never used.","'useHistory' is defined but never used.","'useParams' is defined but never used.","'message' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"238","fix":"242"},"Update the dependencies array to be: [history, request, studentId]",{"range":"243","text":"244"},"Update the dependencies array to be: [request, studentId]",{"range":"245","text":"246"},"Update the dependencies array to be: [request, roomdId]",{"range":"247","text":"248"},"Update the dependencies array to be: [currentRoom.storeroom, fetchRoom]",{"range":"249","text":"250"},{"range":"251","text":"248"},[2769,2778],"[history, request, studentId]",[3030,3039],"[request, studentId]",[2874,2883],"[request, roomdId]",[3476,3487],"[currentRoom.storeroom, fetchRoom]",[1599,1608]]